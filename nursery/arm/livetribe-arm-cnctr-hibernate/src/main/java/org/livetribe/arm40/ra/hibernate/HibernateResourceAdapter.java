/**
 *
 * Copyright 2006 (C) The original author or authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.livetribe.arm40.ra.hibernate;

import javax.naming.NamingException;
import javax.naming.Reference;
import javax.resource.Referenceable;
import javax.resource.ResourceException;
import javax.resource.spi.ActivationSpec;
import javax.resource.spi.BootstrapContext;
import javax.resource.spi.ResourceAdapter;
import javax.resource.spi.ResourceAdapterInternalException;
import javax.resource.spi.endpoint.MessageEndpointFactory;
import javax.sql.DataSource;
import javax.transaction.xa.XAResource;


/**
 * @version $Revision$ $Date$
 */
public class HibernateResourceAdapter implements ResourceAdapter, Referenceable
{
    private Reference reference;
    private HibernateConnectionRequestInfo info;

    public void start(BootstrapContext bootstrapContext) throws ResourceAdapterInternalException
    {
        //todo: consider this autogenerated code
    }

    public void stop()
    {
        //todo: consider this autogenerated code
    }

    public void endpointActivation(MessageEndpointFactory messageEndpointFactory, ActivationSpec activationSpec) throws ResourceException
    {
        //todo: consider this autogenerated code
    }

    public void endpointDeactivation(MessageEndpointFactory messageEndpointFactory, ActivationSpec activationSpec)
    {
        //todo: consider this autogenerated code
    }

    public XAResource[] getXAResources(ActivationSpec[] activationSpecs) throws ResourceException
    {
        return new XAResource[0];  //todo: consider this autogenerated code
    }

    public void setReference(Reference reference)
    {
        this.reference = reference;
    }

    public Reference getReference() throws NamingException
    {
        return reference;
    }

    public DataSource getDataSource()
    {
        return info.getDataSource();
    }

    public void setDataSource(DataSource dataSource)
    {
        info.setDataSource(dataSource);
    }

    public boolean equals(Object obj)
    {
        if (this == obj) return true;
        if (!(obj instanceof HibernateResourceAdapter)) return false;

        final HibernateResourceAdapter other = (HibernateResourceAdapter) obj;

        return info.equals(other.info);
    }

    public int hashCode()
    {
        return info.hashCode();
    }

}
